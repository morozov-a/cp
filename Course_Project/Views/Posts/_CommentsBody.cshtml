@model Course_Project.Models.PostViewModels.Post
@inject UserManager<ApplicationUser> UserManager
@using Course_Project.Data
@inject ApplicationDbContext _context
<section id="comments">
    <div class="container" id="com">
        <h2>Комментарии:</h2>
        @foreach (var comment in _context.Comments)
    {
        if (comment.PostId == Model.Id && Model.Comments.SingleOrDefault(m => m.Id == comment.Id) == null)
        {
            Model.Comments.Add(comment);
        }
    }
        @if (Model.Comments.Count == 0)
    {
        <p>К данной новости пока нет комментариев</p>
}
else
{
    @foreach (var comment in Model.Comments.OrderBy(a => a.CreatedDate))
{
    var author = await UserManager.FindByIdAsync(comment.AuthorId);
    <div class="comments-container">
        <ul id="comments-list" class="comments-list">
            <li>
                <div class="comment-main-level">
                    <div class="comment-avatar">
                        <img src=@author.ProfilePicture alt="UseLogo">
                    </div>
                    <div class="comment-box">
                        <div class="comment-head">
                            <h6 class="comment-name"><a href="">@Html.Raw(author)</a></h6>
                            <span style="margin-right: 10px;">@Html.Raw(comment.CreatedDate)</span>

                     
                            @Html.Partial("_Like", comment)
                        </div>
                        <div class="comment-content">
                            @comment.Text
                        </div>
                    </div>
                </div>
            </li>
        </ul>
    </div>
  














    @*<img src=@author.ProfilePicture class="img-circle" alt="UserLogo" height="50" width="50" />
    <label>@comment.Text</label>
    @Html.Raw(comment.CreatedDate)
    <br />
    <strong> @Html.Raw(author)</strong>
    <div>
        @Html.Partial("_Like", comment)
    </div>
    <br />
    <br />*@
}
}
    </div>
</section>
