@model Course_Project.Models.PostViewModels.Post
@inject UserManager<ApplicationUser> UserManager
@using Course_Project.Data
@inject ApplicationDbContext _context
@{
    var postId = Model.Id;
    var idForm = "currentValue" + Model.Id;
    var idFormUpdate = "#" + idForm;
    var idDiv = "currentValue" + Model.Id + "div";
    var idDivUpdate = "#" + idDiv;
    var user = await UserManager.GetUserAsync(User);
    var isRated = _context.Raitings.Where(n => n.PostId == Model.Id && n.UserId == user.Id).SingleOrDefault();
    var raiting = string.Format("{0:N2}", Model.Raiting);

}
<div class="stars" id=@idDiv>
    <form id=@idForm asp-action="SetRaiting" asp-route-postId=@Model.Id data-ajax="true" data-ajax-method="POST" data-ajax-update="@idDivUpdate">
        <p style="float: left;padding:4px;position:relative;top:3px">@Localizer["Rate this post:"]</p>


        @for (int i = 5; i > 0; i--)
    {
        string id = Model.Id + i;
        string classStars = "star star-" + i;
        if (isRated != null && i == isRated.Value)
        {
            <input class="@classStars" id=@id type="radio" name="currentValue" value=@i onclick="onClick(name,id)" checked />
            <label class="@classStars" for=@id></label>
    }
    else
    {
        <input class="@classStars" id=@id type="radio" name="currentValue" value=@i onclick="onClick(name,id)" />
        <label class="@classStars" for=@id></label>
}
}
        
        <div style="width: 340px;float:left;position:relative;left:-20px"><p style="float: right;position:relative;top:8px;left:20px">@Localizer["Post rating:"] @raiting (@Localizer["Voted on"] @Model.CountOfVoters @Localizer["people."])</p></div>
    </form>

</div>
<script type="text/javascript">
    var onClick = function (name, id) {
        id = id.substring(0, id.length - 1);
        $("#" + name + id).submit();
    };
</script>
